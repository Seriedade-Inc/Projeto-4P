// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Projeto4pServer.Data;

#nullable disable

namespace Projeto4pServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250624215532_AlteradoBlasphemyAndAgenda")]
    partial class AlteradoBlasphemyAndAgenda
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Agenda", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AgendaName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AgendaText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Blasphemy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BlasphemyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlasphemyText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Blasphemies");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Advance")
                        .HasColumnType("integer");

                    b.Property<int>("Burst")
                        .HasColumnType("integer");

                    b.Property<int>("CAT")
                        .HasColumnType("integer");

                    b.Property<string>("CharacterXID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DivineAgony")
                        .HasColumnType("integer");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Injury")
                        .HasColumnType("integer");

                    b.Property<int>("KitPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Marks")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SinOverflow")
                        .HasColumnType("integer");

                    b.Property<int>("Stress")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("XP")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.CharacterSkills", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Authority")
                        .HasColumnType("integer");

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<int>("Conditioning")
                        .HasColumnType("integer");

                    b.Property<int>("Connection")
                        .HasColumnType("integer");

                    b.Property<int>("Coordination")
                        .HasColumnType("integer");

                    b.Property<int>("Covert")
                        .HasColumnType("integer");

                    b.Property<int>("Force")
                        .HasColumnType("integer");

                    b.Property<int>("Interfacing")
                        .HasColumnType("integer");

                    b.Property<int>("Investigation")
                        .HasColumnType("integer");

                    b.Property<int>("Negotiation")
                        .HasColumnType("integer");

                    b.Property<int>("Surveillance")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Inventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("text");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Agenda", b =>
                {
                    b.HasOne("Projeto4pSharedLibrary.Classes.Character", "Character")
                        .WithMany("Agendas")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Blasphemy", b =>
                {
                    b.HasOne("Projeto4pSharedLibrary.Classes.Character", "Character")
                        .WithMany("Blasphemies")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character", b =>
                {
                    b.HasOne("Projeto4pSharedLibrary.Classes.User", null)
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.CharacterSkills", b =>
                {
                    b.HasOne("Projeto4pSharedLibrary.Classes.Character", "Character")
                        .WithOne("CharacterSkills")
                        .HasForeignKey("Projeto4pSharedLibrary.Classes.CharacterSkills", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Inventory", b =>
                {
                    b.HasOne("Projeto4pSharedLibrary.Classes.Character", "Character")
                        .WithMany("Inventories")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("Blasphemies");

                    b.Navigation("CharacterSkills");

                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
