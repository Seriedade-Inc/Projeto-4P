// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Projeto4pServer.Data;

#nullable disable

namespace Projeto4pServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250409213322_Start")]
    partial class Start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Advance")
                        .HasColumnType("integer");

                    b.Property<string>("Agenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Blasfemia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Burst")
                        .HasColumnType("integer");

                    b.Property<int>("CAT")
                        .HasColumnType("integer");

                    b.Property<string>("CharacterXID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DivineAgony")
                        .HasColumnType("integer");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Heigth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Injury")
                        .HasColumnType("integer");

                    b.Property<int>("KitPoints")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("Marks")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SinOverflow")
                        .HasColumnType("integer");

                    b.Property<int>("Stress")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Weigth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("XP")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character+Inventory", b =>
                {
                    b.Property<long>("CharacterID")
                        .HasColumnType("bigint");

                    b.PrimitiveCollection<List<string>>("Items")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("CharacterID");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character+Skills", b =>
                {
                    b.Property<long>("CharacterID")
                        .HasColumnType("bigint");

                    b.Property<int>("Authority")
                        .HasColumnType("integer");

                    b.Property<int>("Conditioning")
                        .HasColumnType("integer");

                    b.Property<int>("Connection")
                        .HasColumnType("integer");

                    b.Property<int>("Coordination")
                        .HasColumnType("integer");

                    b.Property<int>("Covert")
                        .HasColumnType("integer");

                    b.Property<int>("Force")
                        .HasColumnType("integer");

                    b.Property<int>("Interfacing")
                        .HasColumnType("integer");

                    b.Property<int>("Investigation")
                        .HasColumnType("integer");

                    b.Property<int>("Negotiation")
                        .HasColumnType("integer");

                    b.Property<int>("Surveillance")
                        .HasColumnType("integer");

                    b.HasKey("CharacterID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResetCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ResetCodeExpiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character+Inventory", b =>
                {
                    b.HasOne("Projeto4pSharedLibrary.Classes.Character", null)
                        .WithOne("CharacterInventory")
                        .HasForeignKey("Projeto4pSharedLibrary.Classes.Character+Inventory", "CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character+Skills", b =>
                {
                    b.HasOne("Projeto4pSharedLibrary.Classes.Character", null)
                        .WithOne("CharacterSkills")
                        .HasForeignKey("Projeto4pSharedLibrary.Classes.Character+Skills", "CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto4pSharedLibrary.Classes.Character", b =>
                {
                    b.Navigation("CharacterInventory")
                        .IsRequired();

                    b.Navigation("CharacterSkills")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
